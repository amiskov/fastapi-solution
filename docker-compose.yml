version: '3'

services:
  nginx:
    image: nginx
    depends_on:
      app:
        condition: service_healthy
      fastapi:
        condition: service_healthy
    volumes:
      - static:/usr/share/nginx/html/static
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx_config/site.conf:/etc/nginx/conf.d/site.conf
    ports:
      - "80:80"

  app:
    container_name: app
    image: ghcr.io/vitaliyrakitin/cinema-django-app:latest
    restart: always
    env_file:
      - environments/cinema-django-app.env
    volumes:
      - static:/app/static
      - locale:/app/movies/locale
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  db:
    container_name: db
    image: postgres:13.0-alpine
    restart: always
    env_file:
      - environments/postgres.env
    environment:
      PGDATA: /var/lib/postgresql/data/pg-data/
    volumes:
      - db:/var/lib/postgresql/data/pg-data/
      - ./db/movies_database.ddl:/docker-entrypoint-initdb.d/db.sql
    healthcheck:
      test: "exit 0"

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.17.0
    restart: always
    environment:
      discovery.type: single-node
    depends_on:
      - app
    healthcheck:
      test: "exit 0"

  etl:
    container_name: etl
    image: ghcr.io/vitaliyrakitin/cinema-etl:latest
    restart: always
    env_file:
      - environments/cinema-etl.env
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  cache:
    image: redis:6.2-alpine
    restart: always
    volumes:
      - cache:/data
    healthcheck:
      test: "exit 0"

  fastapi:
    container_name: fastapi
    restart: always
    build: .
    env_file:
      - environments/.env
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy
      cache:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: "exit 0"


volumes:
  cache: {}
  static: {}
  db: {}
  locale: {}

